{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(leaflet)\nrequire(DT)\n\nshinyServer(function(input, output) {\n        \n  df1 <- eventReactive(input$clicks1, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select CAUSE_NAME,AADR, DEATHS, STATE, YEAR from COD\n            where STATE = \\\\\\'Texas\\\\\\'                                                                     and CAUSE_NAME != \\\\\\'All Causes\\\\\\';\"')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_hog74', PASS='orcl_hog74', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))\n  })\n  \n  output$distPlot1 <- renderPlot(height=500, width=1000, {\n    plot1 <- ggplot() + \n      coord_cartesian() + \n      scale_x_continuous() +\n      scale_y_continuous() +\n      labs(title= 'Correlation between Spending on Hospital Care and Deaths caused by Diseases of the Heart', x= 'Deaths',y='Spending in 1999') +\n      layer(data=df1(), \n            mapping=aes(x=DEATHS, y=AADR), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"point\"\n      ) \n    plot1\n  })\n\n# Begin code for Second Tab:\n\n      df2 <- eventReactive(input$clicks2, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n            \"select color, clarity, avg_price, avg(avg_price) \n             OVER (PARTITION BY clarity ) as window_avg_price\n             from (select color, clarity, avg(price) avg_price\n                   from diamonds\n                   group by color, clarity)\n            order by clarity;\"\n            ')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', \n            MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))\n      })\n\n      output$distPlot2 <- renderPlot(height=1000, width=2000, {\n            plot1 <- ggplot() + \n              coord_cartesian() + \n              scale_x_discrete() +\n              scale_y_continuous() +\n              facet_wrap(~CLARITY, ncol=1) +\n              labs(title='Diamonds Barchart\\nAVERAGE_PRICE, WINDOW_AVG_PRICE, ') +\n              labs(x=paste(\"COLOR\"), y=paste(\"AVG_PRICE\")) +\n              layer(data=df2(), \n                    mapping=aes(x=COLOR, y=AVG_PRICE), \n                    stat=\"identity\", \n                    stat_params=list(), \n                    geom=\"bar\",\n                    geom_params=list(colour=\"blue\"), \n                    position=position_identity()\n              ) + coord_flip() +\n              layer(data=df2(), \n                    mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE - WINDOW_AVG_PRICE)), \n                    stat=\"identity\", \n                    stat_params=list(), \n                    geom=\"text\",\n                    geom_params=list(colour=\"black\", hjust=-1), \n                    position=position_identity()\n              ) +\n              layer(data=df2(), \n                    mapping=aes(yintercept = WINDOW_AVG_PRICE), \n                    geom=\"hline\",\n                    geom_params=list(colour=\"red\")\n              )\n              plot1\n      })\n\n# Begin code for Third Tab:\n\n      df3 <- eventReactive(input$clicks3, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n            \"\"\"select region || \\\\\\' \\\\\\' || \\\\\\'Sales\\\\\\' as measure_names, sum(sales) as measure_values from SUPERSTORE_SALES_ORDERS\n            where country_region = \\\\\\'United States of America\\\\\\'\n            group by region\n            union all\n            select market || \\\\\\' \\\\\\' || \\\\\\'Coffee_Sales\\\\\\' as measure_names, sum(coffee_sales) as measure_values from COFFEE_CHAIN\n            group by market\n            order by 1;\"\"\"\n            ')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', \n            MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))\n      })\n\n      output$distPlot3 <- renderPlot(height=1000, width=2000, {\n            plot3 <- ggplot() + \n              coord_cartesian() + \n              scale_x_discrete() +\n              scale_y_continuous() +\n              #facet_wrap(~CLARITY, ncol=1) +\n              labs(title='Blending 2 Data Sources') +\n              labs(x=paste(\"Region Sales\"), y=paste(\"Sum of Sales\")) +\n              layer(data=df3(), \n                    mapping=aes(x=MEASURE_NAMES, y=MEASURE_VALUES), \n                    stat=\"identity\", \n                    stat_params=list(), \n                    geom=\"bar\",\n                    geom_params=list(colour=\"blue\"), \n                    position=position_identity()\n              ) + coord_flip() +\n              layer(data=df3(), \n                    mapping=aes(x=MEASURE_NAMES, y=MEASURE_VALUES, label=round(MEASURE_VALUES)), \n                    stat=\"identity\", \n                    stat_params=list(), \n                    geom=\"text\",\n                    geom_params=list(colour=\"black\", hjust=-0.5), \n                    position=position_identity()\n              )\n              plot3\n      })\n\n# Begin code for Fourth Tab:\n      output$map <- renderLeaflet({leaflet() %>% addTiles() %>% setView(-93.65, 42.0285, zoom = 17) %>% addPopups(-93.65, 42.0285, 'Here is the Department of Statistics, ISU')\n      })\n\n# Begin code for Fifth Tab:\n      output$table <- renderDataTable({datatable(df1())\n      })\n})\n",
    "created" : 1449442393946.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1419309057",
    "id" : "C5D841C9",
    "lastKnownWriteTime" : 1449460982,
    "path" : "~/University of Texas/Data Visualization/DV_FinalProject/04 Shiny/server.R",
    "project_path" : "04 Shiny/server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}
{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(leaflet)\n\nshinyServer(function(input, output) {\n        \n      KPI_Low_Max_value <- reactive({input$KPI1})     \n      KPI_Medium_Max_value <- reactive({input$KPI2})\n      rv <- reactiveValues(alpha = 0.50)\n      observeEvent(input$light, { rv$alpha <- 0.50 })\n      observeEvent(input$dark, { rv$alpha <- 0.75 })\n    \n      df1 <- eventReactive(input$clicks1, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select CODE, ITEM, STATE_NAME, AVERAGE_ANNUAL_PERCENT_GROWTH, KPI as ratio,case when KPI < \"p1\" then \\\\\\'03 Low\\\\\\' when KPI < \"p2\" then \\\\\\'02 Med\\\\\\' else \\\\\\'01 High\\\\\\' end KPI from (select CODE, ITEM, STATE_NAME, AVERAGE_ANNUAL_PERCENT_GROWTH, AVERAGE_ANNUAL_PERCENT_GROWTH as KPI from NHCE where ITEM != \\\\\\'Total State Spending\\\\\\' AND STATE_NAME != \\\\\\'null\\\\\\')\"')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_riw223', PASS='orcl_riw223', \n                 MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value(), p2=KPI_Medium_Max_value()), verbose = TRUE)))\n      })\n\n      output$distPlot1 <- renderPlot({             \n            plot <- ggplot() + \n                  coord_cartesian() + \n                  scale_x_discrete() +\n                  scale_y_discrete() +\n                  labs(title=isolate(input$title)) +\n                  labs(x=paste(\"ITEM\"), y=paste(\"STATE\")) +\n                  layer(data=df1(), \n                        mapping=aes(x=ITEM, y=STATE_NAME, label=round(AVERAGE_ANNUAL_PERCENT_GROWTH,2)), \n                        stat=\"identity\", \n                        stat_params=list(), \n                        geom=\"text\",\n                        geom_params=list(colour=\"black\"), \n                        position=position_identity()\n                  ) +\n                  layer(data=df1(), \n                        mapping=aes(x=ITEM, y=STATE_NAME, fill=KPI), \n                        stat=\"identity\", \n                        stat_params=list(), \n                        geom=\"tile\",\n                        geom_params=list(alpha=rv$alpha), \n                        position=position_identity()\n                  )\n            plot\n      }) \n\n      observeEvent(input$clicks, {\n            print(as.numeric(input$clicks))\n      })\n\n      df2 <- eventReactive(input$clicks2, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select YEAR, ITEM, SPENDING from MELTEDDATA\"')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_riw223', PASS='orcl_riw223', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))\n      })\n      \n      output$distPlot2 <- renderPlot(height=1000, width=2000, {\n        plot1 <- ggplot () + \n          coord_cartesian() +\n          scale_x_discrete() +\n          scale_y_continuous() +\n          labs(title = 'Annual Healthcare Expenditure in Texas by Service Type',x='Year',y='Spending') +\n          layer(data = df2(), \n                mapping = aes(x = YEAR, y =SPENDING, fill = ITEM), \n                stat = 'identity',\n                geom = 'bar') + \n          theme(axis.text.x = element_text(angle = 45,size = 10))\n        plot1\n      })\n      \n      df3 <- eventReactive(input$clicks3, {data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\"select CAUSE_NAME,AADR, DEATHS, STATE, YEAR from COD\n            where STATE = \\\\\\'Texas\\\\\\'                                                                     and CAUSE_NAME != \\\\\\'All Causes\\\\\\';\"')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_riw223', PASS='orcl_riw223', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))\n      })\n      \n      output$distPlot3 <- renderPlot(height=1000, width=2000, {\n        plot3 <- ggplot() + \n          coord_cartesian() + \n          scale_x_continuous() +\n          scale_y_continuous() +\n          labs(title= 'Correlation between Spending on Hospital Care and Deaths caused by Diseases of the Heart', x= 'Deaths',y='Spending in 1999') +\n          layer(data=df3(), \n                mapping=aes(x=DEATHS, y=AADR), \n                stat=\"identity\", \n                stat_params=list(), \n                geom=\"point\"\n          ) \n        plot3\n      })\n      \n})\n",
    "created" : 1449459030683.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3371478979",
    "id" : "F83AB05C",
    "lastKnownWriteTime" : 1449460136,
    "path" : "~/University of Texas/Data Visualization/DV_SProject/02 Shiny/server.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}